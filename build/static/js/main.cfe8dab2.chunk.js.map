{"version":3,"sources":["services/persons.js","components/PersonForm.js","components/Persons.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","personsService","getAll","axios","get","then","response","data","create","newObject","post","deletePerson","id","delete","update","newPerson","put","PersonForm","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setNotificationMessage","onSubmit","event","preventDefault","name","number","some","person","existingPerson","find","window","confirm","personService","returnedPerson","map","pers","message","type","setTimeout","catch","filter","concat","value","onChange","target","Person","onClick","newPersons","Persons","newFilter","toLowerCase","includes","Filter","setNewFilter","Notification","notificationMessage","className","App","useState","useEffect","console","log","initialPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cfe8dab2.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data) // in the response.data is no data\n}\n\nconst update = (id, newPerson) => {\n  const request = axios.put(`${baseUrl}/${id}`, newPerson)\n  return request.then(response => response.data) // in the response.data is no data\n}\n\nconst personsService = { getAll, create, deletePerson, update }\n\nexport default personsService","import React from 'react'\nimport personService from '../services/persons'\n\nconst PersonForm = ({persons, setPersons, newName, setNewName, newNumber, setNewNumber, setNotificationMessage}) => {\n  const addName = (event) => {\n    event.preventDefault()\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (persons.some(person => person.name === newName)) {\n      const existingPerson = persons.find(person => person.name === newName)\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        personService\n        .update(existingPerson.id, newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.map(pers => pers.id !== existingPerson.id ? pers : returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setNotificationMessage({message:`Changed ${newName}'s number to ${newNumber}`, type:'notificaiton'})\n          setTimeout(() => {\n            setNotificationMessage({message: null, type: null})\n          }, 5000)\n        })\n        .catch(() => {\n          setNotificationMessage({message:`Information of ${newName} has already been removed from server`, type:'error'})\n          setTimeout(() => {\n            setNotificationMessage({message: null, type: null})\n          }, 5000)\n          setPersons(persons.filter(person => person.id !== existingPerson.id))\n          setNewName('')\n          setNewNumber('')\n        })\n      }\n    }\n    else {\n      personService\n        .create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setNotificationMessage({message:`Added ${newName}`, type:'notification'})\n          setTimeout(() => {\n            setNotificationMessage({message: null, type: null})\n          }, 5000)\n        })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  return (\n    <form onSubmit={addName}>\n        <div>\n          name:\n          <input\n          value={newName}\n          onChange={handleNameChange}\n          />\n        </div>\n        <div>\n          number:\n          <input\n          value={newNumber}\n          onChange={handleNumberChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\nimport personService from '../services/persons'\n\nconst Person = ({person, setPersons, persons, setNotificationMessage}) => {\n  const deleteButton = () => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService\n        .deletePerson(person.id)\n        .then(() => {\n          const newPersons = persons.filter(pers => pers.id !== person.id)\n          setPersons(newPersons)\n          setNotificationMessage({message:`Deleted ${person.name}`, type:'notification'})\n          setTimeout(() => {\n            setNotificationMessage({message: null, type: null})\n          }, 5000)\n        })\n        .catch(() => {\n          setNotificationMessage({message:`Information of ${person.name} has already been removed from server`, type:'error'})\n          setTimeout(() => {\n            setNotificationMessage({message: null, type: null})\n          }, 5000)\n          setPersons(persons.filter(pers => pers.id !== person.id))\n        })\n    }\n  }\n  return (\n    <div>{person.name} {person.number} <button onClick={deleteButton}>delete</button></div>\n  )\n}\n\nconst Persons = ({persons, newFilter, setPersons, setNotificationMessage }) => {\n  const filteredPersons = persons.map(\n    person => {\n    if (person.name.toLowerCase().includes(newFilter.toLowerCase())) {\n      return (<Person\n                key={person.name}\n                person={person}\n                setPersons={setPersons}\n                persons={persons}\n                setNotificationMessage={setNotificationMessage}\n              />)\n    }\n    return null\n    }\n  )\n  return filteredPersons\n}\n\nexport default Persons","import React from 'react'\n\nconst Filter = ({newFilter, setNewFilter}) => {\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  return (\n    <div>\n        filter shown with:\n        <input\n        value={newFilter}\n        onChange={handleFilterChange}\n        />\n      </div>      \n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst Notification = ({ notificationMessage }) => {\n  if (notificationMessage.message === null) {\n    return null\n  }\n\n  return (\n    <div className={notificationMessage.type}>\n      {notificationMessage.message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ notificationMessage, setNotificationMessage ] = useState({message: null, type: null})\n\n\n  const hook = () => {\n    console.log('effect')\n    personService\n      .getAll()\n      .then(initialPersons => {\n        console.log('promise fulfilled')\n        setPersons(initialPersons)\n      })\n  }\n  \n  useEffect(hook, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notificationMessage={notificationMessage}/>\n      <Filter newFilter={newFilter} setNewFilter={setNewFilter} />\n      <h3>add a new</h3>\n      <PersonForm\n        persons={persons}\n        setPersons={setPersons}\n        newName={newName}\n        setNewName={setNewName}\n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n        setNotificationMessage={setNotificationMessage}\n      />\n      <h3>Numbers</h3>\n      <Persons\n        persons={persons}\n        newFilter={newFilter}\n        setPersons={setPersons}\n        setNotificationMessage={setNotificationMessage}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}